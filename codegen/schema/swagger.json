{
  "openapi": "3.0.0",
  "info": {
    "title": "API",
    "version": "0.1"
  },
  "paths": {
    "/api/assessments": {
      "get": {
        "tags": [
          "Assessments"
        ],
        "summary": "Lists assessments",
        "operationId": "listAssessments",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentPagingResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      },
      "post": {
        "tags": [
          "Assessments"
        ],
        "summary": "Adds a new assessment",
        "operationId": "storeAssessment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssessmentStoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      }
    },
    "/api/assessments/store-assessment/vulnerability": {
      "post": {
        "tags": [
          "Assessments"
        ],
        "summary": "Adds a new assessment",
        "operationId": "storeAssessmentVulnerability",
        "parameters": [
          {
            "name": "vulnerability_id",
            "in": "query",
            "description": "Vulnerability id",
            "required": true,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssessmentStoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      }
    },
    "/api/assessments/{id}": {
      "get": {
        "tags": [
          "Assessments"
        ],
        "summary": "Get Assessment information",
        "description": "Returns Assessment data",
        "operationId": "showAssessment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Assessment id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      },
      "put": {
        "tags": [
          "Assessments"
        ],
        "summary": "Update Assessment information",
        "description": "Returns updated Assessment data",
        "operationId": "updateAssessment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Assessment id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssessmentStoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Assessments"
        ],
        "summary": "Delete Assessment",
        "description": "Deletes a single Assessment",
        "operationId": "deleteAssessment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Assessment id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      }
    },
    "/api/assessments/find": {
      "post": {
        "tags": [
          "Assessments"
        ],
        "summary": "Find assessments by vulnerability id, asset id, system group id, company id",
        "operationId": "findAssessments",
        "parameters": [
          {
            "name": "vulnerability_id",
            "in": "query",
            "description": "Vulnerability id",
            "required": true,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssessmentFindRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssessmentResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      }
    },
    "/api/assets": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Lists assets",
        "operationId": "listAssets",
        "parameters": [
          {
            "name": "scan_import_job_id",
            "in": "query",
            "description": "Scan import job id",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetPagingResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      },
      "post": {
        "tags": [
          "Assets"
        ],
        "summary": "Adds a new asset",
        "operationId": "storeAsset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetStoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      }
    },
    "/api/assets/list-all": {
      "post": {
        "tags": [
          "Assets"
        ],
        "summary": "Lists all assets",
        "operationId": "listAllAssets",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetPagingResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      }
    },
    "/api/assets/vulnerability/{vulnerability_id}": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Lists assets by vulnerability id",
        "operationId": "getAssetsByVulnerability",
        "parameters": [
          {
            "name": "vulnerability_id",
            "in": "query",
            "description": "Vulnerability id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetPagingResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      }
    },
    "/api/assets/system-group/{system_group_id}": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Lists assets by system group id",
        "operationId": "getAssetsBySystemGroup",
        "parameters": [
          {
            "name": "system_group_id",
            "in": "query",
            "description": "System group id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetPagingResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      }
    },
    "/api/assets/{id}": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Get Asset information",
        "description": "Returns Asset data",
        "operationId": "showAsset",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Asset id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      },
      "put": {
        "tags": [
          "Assets"
        ],
        "summary": "Update Asset information",
        "description": "Returns updated Asset data",
        "operationId": "updateAsset",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Asset id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetStoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Assets"
        ],
        "summary": "Delete Asset",
        "description": "Deletes a single Asset",
        "operationId": "deleteAsset",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Asset id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      }
    },
    "/api/companies": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Lists companies",
        "operationId": "listCompanies",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyPagingResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      },
      "post": {
        "tags": [
          "Companies"
        ],
        "summary": "Adds a new company",
        "operationId": "storeCompany",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyStoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      }
    },
    "/api/companies/{id}": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get Company information",
        "description": "Returns Company data",
        "operationId": "showCompany",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Company id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      },
      "put": {
        "tags": [
          "Companies"
        ],
        "summary": "Update Company information",
        "description": "Returns Company data",
        "operationId": "updateCompany",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Company id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Companies"
        ],
        "summary": "Delete Company",
        "description": "Returns deleted Company data",
        "operationId": "destroyCompany",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Company id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      }
    },
    "/api/import/scan-results": {
      "post": {
        "tags": [
          "Import"
        ],
        "summary": "Import a CSV",
        "operationId": "importScanResults",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "file": {
                    "description": "Item CsV",
                    "type": "string",
                    "format": "binary"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      }
    },
    "/api/scan-import-jobs": {
      "get": {
        "tags": [
          "ScanImportJobs"
        ],
        "summary": "Lists scan import jobs",
        "operationId": "listScanImportJobs",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScanImportJobPagingResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      }
    },
    "/api/system-groups": {
      "get": {
        "tags": [
          "SystemGroups"
        ],
        "summary": "Lists system groups",
        "operationId": "listSystemGroups",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemGroupPagingResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      },
      "post": {
        "tags": [
          "SystemGroups"
        ],
        "summary": "Adds a new system group",
        "operationId": "storeSystemGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemGroupStoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemGroupResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      }
    },
    "/api/system-groups/{id}": {
      "get": {
        "tags": [
          "SystemGroups"
        ],
        "summary": "Get system group information",
        "description": "Returns system group",
        "operationId": "getSystemGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "System group id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemGroupResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      },
      "put": {
        "tags": [
          "SystemGroups"
        ],
        "summary": "Update an existing system group",
        "operationId": "updateSystemGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "System group id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemGroupUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemGroupResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      },
      "delete": {
        "tags": [
          "SystemGroups"
        ],
        "summary": "Delete system group",
        "description": "Deletes a system group",
        "operationId": "deleteSystemGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "System group id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemGroupResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      }
    },
    "/api/system-groups/{id}/asset/{assetId}": {
      "post": {
        "tags": [
          "SystemGroups"
        ],
        "summary": "Add an asset to a system group",
        "operationId": "addAsset",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "System group id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "assetId",
            "in": "path",
            "description": "Asset id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemGroupResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      },
      "delete": {
        "tags": [
          "SystemGroups"
        ],
        "summary": "Add an asset to a system group",
        "operationId": "removeAsset",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "System group id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "assetId",
            "in": "path",
            "description": "Asset id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemGroupResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      }
    },
    "/api/system-groups/{id}/assets/unassigned": {
      "get": {
        "tags": [
          "SystemGroups"
        ],
        "summary": "Get all assets that are not in the system group",
        "operationId": "getUnassignedAssets",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "System group id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetPagingResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      }
    },
    "/api/tenants": {
      "get": {
        "tags": [
          "Tenants"
        ],
        "summary": "Lists tenants",
        "operationId": "listTenants",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantPagingResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      },
      "post": {
        "tags": [
          "Tenants"
        ],
        "summary": "Adds a new tenant",
        "operationId": "storeTenant",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantStoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      }
    },
    "/api/tenants/{id}": {
      "get": {
        "tags": [
          "Tenants"
        ],
        "summary": "Get Tenant information",
        "description": "Returns Tenant data",
        "operationId": "showTenant",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Tenant id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      },
      "put": {
        "tags": [
          "Tenants"
        ],
        "summary": "Update Tenant information",
        "description": "Returns Tenant data",
        "operationId": "updateTenant",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Tenant id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Tenants"
        ],
        "summary": "Delete Tenant",
        "description": "Returns deleted Tenant data",
        "operationId": "destroyTenant",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Tenant id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      }
    },
    "/api/user/login": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Login user",
        "operationId": "login",
        "requestBody": {
          "description": "Logs in a user",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "description": "JWT access token",
                  "type": "string"
                },
                "example": "Bearer 4|oeXad4kChJT43wli90LOd1VbFhtuGuEdvxvEHMAtcb025185"
              }
            }
          }
        }
      }
    },
    "/api/user/current": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get current user",
        "description": "Returns the current user",
        "operationId": "current",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      }
    },
    "/api/user/logout": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Logout user",
        "operationId": "logout",
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      }
    },
    "/api/vulnerabilities": {
      "get": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Lists vulnerabilities",
        "operationId": "listVulnerabilities",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VulnerabilityPagingResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      },
      "post": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Adds a new vulnerability",
        "operationId": "storeVulnerability",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VulnerabilityStoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VulnerabilityResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      }
    },
    "/api/vulnerabilities/{id}": {
      "get": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Get Vulnerability information",
        "description": "Returns Vulnerability data",
        "operationId": "showVulnerability",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Vulnerability id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VulnerabilityResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      },
      "put": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Update Vulnerability information",
        "description": "Returns updated Vulnerability data",
        "operationId": "updateVulnerability",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Vulnerability id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VulnerabilityStoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VulnerabilityResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Delete Vulnerability",
        "description": "Deletes a single Vulnerability",
        "operationId": "deleteVulnerability",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Vulnerability id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VulnerabilityResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      }
    },
    "/api/vulnerabilities/base-severity/system-group/{systemGroupId}": {
      "get": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Base severity count by system group",
        "description": "Get summery of base severity information by system group",
        "operationId": "getBaseSeverityBySystemGroup",
        "parameters": [
          {
            "name": "systemGroupId",
            "in": "path",
            "description": "System group id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "scan_import_job_id",
            "in": "query",
            "description": "Scan import job id",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseSeverityCountResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      }
    },
    "/api/vulnerabilities/system-group/{systemGroupId}": {
      "get": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Vulnerabilities by system group",
        "description": "Get vulnerabilities by system group",
        "operationId": "getVulnerabilitiesBySystemGroup",
        "parameters": [
          {
            "name": "systemGroupId",
            "in": "path",
            "description": "System group id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "scan_import_job_id",
            "in": "query",
            "description": "Scan import job id",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VulnerabilityPagingResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      }
    },
    "/api/vulnerabilities/base-severity/asset/{assetId}": {
      "get": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Base severity count by asset",
        "description": "Get summery of base severity information by asset",
        "operationId": "getBaseSeverityByAsset",
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "description": "Asset id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "scan_import_job_id",
            "in": "query",
            "description": "Scan import job id",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseSeverityCountResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      }
    },
    "/api/vulnerabilities/asset/{assetId}": {
      "get": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Vulnerabilities by asset",
        "description": "Get vulnerabilities by asset",
        "operationId": "getVulnerabilitiesByAsset",
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "description": "Asset id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "scan_import_job_id",
            "in": "query",
            "description": "Scan import job id",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VulnerabilityPagingResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      }
    },
    "/api/vulnerabilities/company/asset-count/": {
      "get": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Get vulerabilities by company",
        "description": "Get vulerabilities by company",
        "operationId": "getByCompanyWithAssetCount",
        "parameters": [
          {
            "name": "scan_import_job_id",
            "in": "query",
            "description": "Scan import job id",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VulnerabilityPagingResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      }
    },
    "/api/vulnerabilities/company": {
      "get": {
        "tags": [
          "Vulnerabilities"
        ],
        "summary": "Get vulerabilities by company",
        "description": "Get vulerabilities by company",
        "operationId": "getByCompany",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VulnerabilityPagingResource"
                }
              }
            }
          }
        },
        "security": [
          {
            "sanctum": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AssessmentLifecycleStatus": {
        "type": "string",
        "enum": [
          "OPEN",
          "CLOSED"
        ]
      },
      "AssessmentTreatment": {
        "type": "string",
        "enum": [
          "ACCEPT",
          "MITIGATE",
          "TRANSFER",
          "AVOID"
        ]
      },
      "RiskResponseLifecycleStatus": {
        "type": "string",
        "enum": [
          "OPEN",
          "IN_PROGRESS",
          "CLOSED"
        ]
      },
      "SystemGroupType": {
        "type": "string",
        "enum": [
          "DEFAULT",
          "CUSTOM"
        ]
      },
      "Assessment": {
        "title": "Assessment",
        "description": "Assessment model",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseModel"
          },
          {
            "properties": {
              "note": {
                "title": "Note",
                "description": "Some notes of the Assessment",
                "type": "string",
                "example": "This is a note"
              },
              "created": {
                "title": "created",
                "description": "Created date of the Assessment",
                "type": "string",
                "format": "date",
                "example": "2020-01-27"
              },
              "lifecycle_status": {
                "$ref": "#/components/schemas/AssessmentLifecycleStatus"
              },
              "risk_response_lifecycle_status": {
                "$ref": "#/components/schemas/RiskResponseLifecycleStatus"
              },
              "treatment": {
                "$ref": "#/components/schemas/AssessmentTreatment"
              },
              "company_id": {
                "title": "Company Id",
                "description": "Company's id of the Assessment",
                "type": "integer",
                "format": "int64",
                "example": 1
              },
              "company": {
                "$ref": "#/components/schemas/Company"
              },
              "vulnerability_id": {
                "title": "Vulnerability Id",
                "description": "Vulnerability's id of the Assessment",
                "type": "integer",
                "format": "int64",
                "example": 1
              },
              "vulnerability": {
                "$ref": "#/components/schemas/Vulnerability"
              },
              "asset_id": {
                "title": "Asset Id",
                "description": "Asset's id of the Assessment",
                "type": "integer",
                "format": "int64",
                "example": 1
              },
              "asset": {
                "$ref": "#/components/schemas/Asset"
              },
              "system_group_id": {
                "title": "System Group Id",
                "description": "System Group's id of the Assessment",
                "type": "integer",
                "format": "int64",
                "example": 1
              },
              "system_group": {
                "$ref": "#/components/schemas/SystemGroup"
              },
              "risk_response_name": {
                "title": "Risk Response name",
                "description": "Risk Response name of the Assessment",
                "type": "string",
                "format": "string",
                "example": "Approve"
              }
            },
            "type": "object"
          }
        ]
      },
      "Asset": {
        "title": "Asset",
        "description": "Asset model",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseModel"
          },
          {
            "properties": {
              "fqdn": {
                "title": "fqdn",
                "description": "FQDN of the asset",
                "type": "string",
                "format": "string",
                "example": "example.com"
              },
              "unique_id": {
                "title": "unique_id",
                "description": "The unique id of the Asset",
                "type": "string",
                "format": "string",
                "example": "test123"
              },
              "operating_system": {
                "title": "operating_system",
                "description": "The operating system of the Asset",
                "type": "string",
                "format": "string",
                "example": "Windows"
              },
              "vulnerabilities": {
                "title": "Vulnerabilities",
                "description": "Asset vulnerabilities model",
                "type": "array",
                "items": {}
              }
            },
            "type": "object"
          }
        ]
      },
      "BaseModel": {
        "title": "BaseModel",
        "description": "Base Model",
        "properties": {
          "id": {
            "title": "Id",
            "description": "Id",
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "created_at": {
            "title": "Created at",
            "description": "Created at",
            "type": "string",
            "format": "datetime",
            "example": "2020-01-27 17:50:45"
          },
          "updated_at": {
            "title": "Updated at",
            "description": "Updated at",
            "type": "string",
            "format": "datetime",
            "example": "2020-01-27 17:50:45"
          }
        },
        "type": "object"
      },
      "Company": {
        "title": "Company",
        "description": "Company model",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/NamedBaseModel"
          },
          {
            "properties": {
              "tenant_id": {
                "title": "Tenant ID",
                "description": "Tenant's id of the Company",
                "type": "integer",
                "format": "int64",
                "example": 1
              },
              "tenant": {
                "$ref": "#/components/schemas/Tenant"
              }
            },
            "type": "object"
          }
        ]
      },
      "NamedBaseModel": {
        "title": "NamedBaseModel",
        "description": "NamedBaseModel",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseModel"
          },
          {
            "properties": {
              "name": {
                "title": "Name",
                "description": "Name of the entity",
                "type": "string",
                "example": "Elmofuchto"
              }
            },
            "type": "object"
          }
        ]
      },
      "ScanImportJob": {
        "title": "ScanImportJob",
        "description": "ScanImportJob model",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseModel"
          },
          {
            "properties": {
              "company": {
                "$ref": "#/components/schemas/Company"
              }
            },
            "type": "object"
          }
        ]
      },
      "SystemGroup": {
        "title": "SystemGroup",
        "description": "System Group model",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/NamedBaseModel"
          },
          {
            "properties": {
              "type": {
                "$ref": "#/components/schemas/SystemGroupType"
              },
              "company_id": {
                "title": "Company Id",
                "description": "Id of the Company",
                "type": "integer",
                "format": "int64",
                "example": 1
              },
              "company": {
                "$ref": "#/components/schemas/Company"
              },
              "assets": {
                "title": "Assets",
                "description": "System group assets list",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            },
            "type": "object"
          }
        ]
      },
      "Tenant": {
        "title": "Tenant",
        "description": "Tenant model",
        "allOf": [
          {
            "$ref": "#/components/schemas/NamedBaseModel"
          }
        ]
      },
      "User": {
        "title": "User",
        "description": "User model",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/NamedBaseModel"
          },
          {
            "properties": {
              "email_verified_at": {
                "title": "Email verified at",
                "description": "Email verified at",
                "type": "string",
                "format": "datetime",
                "example": "2020-01-27 17:50:45"
              },
              "company": {
                "$ref": "#/components/schemas/Company"
              }
            },
            "type": "object"
          }
        ]
      },
      "Vulnerability": {
        "title": "Vulnerability",
        "description": "Vulnerability model",
        "type": "object",
        "xml": {
          "name": "Vulnerability"
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseModel"
          },
          {
            "properties": {
              "cve_id": {
                "title": "cve_id",
                "description": "CVE ID of the vulnerability",
                "type": "string",
                "format": "string",
                "example": "CVE-2021-1234"
              },
              "cve_details": {
                "title": "cve_details",
                "description": "Details of the vulnerability",
                "type": "string",
                "format": "json",
                "example": "{'description': 'This is a vulnerability', 'severity': 'High'}"
              },
              "assets_count": {
                "title": "assets_count",
                "description": "Optional, the number of assets",
                "type": "integer",
                "format": "integer",
                "example": "{'assets_count': 2}"
              }
            },
            "type": "object"
          }
        ]
      },
      "AssessmentFindRequest": {
        "title": "AssessmentFindRequest",
        "properties": {
          "company_id": {
            "title": "company_id",
            "description": "The company id of the Assessment",
            "type": "integer",
            "example": "1",
            "nullable": true
          },
          "system_group_id": {
            "title": "system_group_id",
            "description": "The system group id of the Assessment",
            "type": "integer",
            "example": "1",
            "nullable": true
          },
          "asset_id": {
            "title": "asset_id",
            "description": "The asset id of the Assessment",
            "type": "integer",
            "example": "1",
            "nullable": true
          }
        },
        "type": "object"
      },
      "AssessmentStoreRequest": {
        "title": "AssessmentStoreRequest",
        "properties": {
          "note": {
            "title": "Note",
            "description": "Note of the Assessment",
            "type": "string",
            "example": "This is a note"
          },
          "lifecycle_status": {
            "$ref": "#/components/schemas/AssessmentLifecycleStatus"
          },
          "treatment": {
            "$ref": "#/components/schemas/AssessmentTreatment"
          },
          "company_id": {
            "title": "company_id",
            "description": "The company id of the Assessment",
            "type": "integer",
            "example": "1",
            "nullable": true
          },
          "system_group_id": {
            "title": "system_group_id",
            "description": "The system group id of the Assessment",
            "type": "integer",
            "example": "1",
            "nullable": true
          },
          "asset_id": {
            "title": "asset_id",
            "description": "The asset id of the Assessment",
            "type": "integer",
            "example": "1",
            "nullable": true
          },
          "risk_response_name": {
            "title": "risk_response_name",
            "description": "Risk Response name of the Assessment",
            "type": "string",
            "example": "Approve"
          },
          "risk_response_lifecycle_status": {
            "$ref": "#/components/schemas/RiskResponseLifecycleStatus"
          }
        },
        "type": "object"
      },
      "AssessmentUpdateRequest": {
        "title": "AssessmentUpdateRequest",
        "properties": {
          "note": {
            "title": "Note",
            "description": "Note of the Assessment",
            "type": "string",
            "example": "This is a note"
          },
          "treatment": {
            "$ref": "#/components/schemas/AssessmentTreatment"
          },
          "lifecycle_status": {
            "$ref": "#/components/schemas/AssessmentLifecycleStatus"
          },
          "company_id": {
            "title": "company_id",
            "description": "The company id of the Assessment",
            "type": "integer",
            "example": "1"
          },
          "system_group_id": {
            "title": "system_group_id",
            "description": "The system group id of the Assessment",
            "type": "integer",
            "example": "1"
          },
          "asset_id": {
            "title": "asset_id",
            "description": "The asset id of the Assessment",
            "type": "integer",
            "example": "1"
          }
        },
        "type": "object"
      },
      "AssetStoreRequest": {
        "title": "AssetStoreRequest",
        "properties": {
          "fqdn": {
            "title": "fqdn",
            "description": "FQDN of the new Asset",
            "type": "string",
            "example": "example.com"
          },
          "unique_id": {
            "title": "unique_id",
            "description": "The unique id of the Asset",
            "type": "string",
            "example": "1"
          },
          "operating_system": {
            "title": "operating_system",
            "description": "The operating system of the Asset",
            "type": "string",
            "example": "Windows"
          }
        },
        "type": "object"
      },
      "AssetUpdateRequest": {
        "title": "AssetUpdateRequest",
        "properties": {
          "fqdn": {
            "title": "fqdn",
            "description": "FQDN of the new Asset",
            "type": "string",
            "example": "example.com"
          },
          "unique_id": {
            "title": "unique_id",
            "description": "The unique id of the Asset",
            "type": "string",
            "example": "1"
          },
          "operating_system": {
            "title": "operating_system",
            "description": "The operating system of the Asset",
            "type": "string",
            "example": "Windows"
          }
        },
        "type": "object"
      },
      "CompanyStoreRequest": {
        "title": "CompanyStoreRequest",
        "properties": {
          "name": {
            "title": "name",
            "description": "Name of the new company",
            "type": "string",
            "example": "A nice company"
          },
          "tenant_id": {
            "title": "tenant_id",
            "description": "The tenant id of the company",
            "type": "integer",
            "example": "1"
          }
        },
        "type": "object"
      },
      "CompanyUpdateRequest": {
        "title": "CompanyUpdateRequest",
        "properties": {
          "name": {
            "title": "name",
            "description": "Name of the company",
            "type": "string",
            "example": "A nice company name"
          },
          "tenant_id": {
            "title": "tenant_id",
            "description": "The tenant id of the company",
            "type": "integer",
            "example": "1"
          }
        },
        "type": "object"
      },
      "LoginRequest": {
        "title": "LoginRequest",
        "properties": {
          "email": {
            "title": "email",
            "description": "Email of of User",
            "type": "string",
            "example": "test@example.com"
          },
          "password": {
            "title": "Password",
            "description": "Users password",
            "type": "string",
            "example": "password"
          }
        },
        "type": "object"
      },
      "SystemGroupStoreRequest": {
        "title": "SystemGroupStoreRequest",
        "properties": {
          "name": {
            "title": "name",
            "description": "Name of the new system group",
            "type": "string",
            "example": "A nice system group name"
          }
        },
        "type": "object"
      },
      "SystemGroupUpdateRequest": {
        "title": "SystemGroupUpdateRequest",
        "properties": {
          "name": {
            "title": "name",
            "description": "Name of the new system group",
            "type": "string",
            "example": "A nice company"
          }
        },
        "type": "object"
      },
      "TenantStoreRequest": {
        "title": "TenantStoreRequest",
        "properties": {
          "name": {
            "title": "name",
            "description": "Name of the new Tenant",
            "type": "string",
            "example": "A nice Tenant"
          }
        },
        "type": "object"
      },
      "TenantUpdateRequest": {
        "title": "TenantUpdateRequest",
        "properties": {
          "name": {
            "title": "name",
            "description": "Update name of the new Tenant",
            "type": "string",
            "example": "A nice Tenant"
          }
        },
        "type": "object"
      },
      "VulnerabilityStoreRequest": {
        "title": "VulnerabilityStoreRequest",
        "properties": {
          "cve_id": {
            "title": "cve_id",
            "description": "ID of the new Vulnerability",
            "type": "string",
            "example": "CVE-2021-1234"
          },
          "cve_details": {
            "title": "cve_details",
            "description": "Details of the new Vulnerability",
            "type": "string",
            "example": "{'description': 'This is a vulnerability', 'severity': 'High'}"
          }
        },
        "type": "object"
      },
      "VulnerabilityUpdateRequest": {
        "title": "VulnerabilityUpdateRequest",
        "properties": {
          "cve_id": {
            "title": "cve_id",
            "description": "ID of the new Vulnerability",
            "type": "string",
            "example": "CVE-2021-1234"
          },
          "cve_details": {
            "title": "cve_details",
            "description": "Details of the new Vulnerability",
            "type": "string",
            "example": "{'description': 'This is a vulnerability', 'severity': 'High'}"
          }
        },
        "type": "object"
      },
      "AssessmentResource": {
        "title": "AssessmentResource",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Assessment"
          }
        },
        "type": "object"
      },
      "AssessmentPagingResource": {
        "title": "AssessmentPagingResource",
        "properties": {
          "data": {
            "title": "Data",
            "description": "Data wrapper",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Assessment"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "type": "object"
      },
      "AssetResource": {
        "title": "AssetResource",
        "description": "AssetResource",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Asset"
          }
        },
        "type": "object",
        "xml": {
          "name": "AssetResource"
        }
      },
      "AssetPagingResource": {
        "title": "AssetPagingResource",
        "description": "AssetPagingResource",
        "properties": {
          "data": {
            "title": "Data",
            "description": "Data wrapper",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Asset"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "type": "object",
        "xml": {
          "name": "AssetPagingResource"
        }
      },
      "CompanyResource": {
        "title": "CompanyResource",
        "description": "CompanyResource",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Company"
          }
        },
        "type": "object",
        "xml": {
          "name": "CompanyResource"
        }
      },
      "CompanyPagingResource": {
        "title": "CompanyPagingResource",
        "description": "CompanyPagingResource",
        "properties": {
          "data": {
            "title": "Data",
            "description": "Data wrapper",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Company"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "type": "object",
        "xml": {
          "name": "CompanyPagingResource"
        }
      },
      "Meta": {
        "title": "Meta",
        "properties": {
          "current_page": {
            "title": "Current Page",
            "description": "Current Page of the data",
            "type": "integer"
          },
          "from": {
            "title": "From",
            "description": "From",
            "type": "integer"
          },
          "last_page": {
            "title": "Last Page",
            "description": "Last Page of the data",
            "type": "integer"
          },
          "per_page": {
            "title": "Per Page",
            "description": "Per Page of the data",
            "type": "integer"
          },
          "to": {
            "title": "To",
            "description": "To",
            "type": "integer"
          },
          "total": {
            "title": "Total",
            "description": "Total",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ScanImportJobResource": {
        "title": "ScanImportJobResource",
        "description": "ScanImportJobResource",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ScanImportJob"
          }
        },
        "type": "object",
        "xml": {
          "name": "ScanImportJobResource"
        }
      },
      "ScanImportJobPagingResource": {
        "title": "ScanImportJobPagingResource",
        "description": "ScanImportJobPagingResource",
        "properties": {
          "data": {
            "title": "Data",
            "description": "Data wrapper",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScanImportJob"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "type": "object",
        "xml": {
          "name": "ScanImportJobPagingResource"
        }
      },
      "SystemGroupResource": {
        "title": "SystemGroupResource",
        "description": "SystemGroupResource",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SystemGroup"
          }
        },
        "type": "object",
        "xml": {
          "name": "SystemGroupResource"
        }
      },
      "SystemGroupPagingResource": {
        "title": "SystemGroupPagingResource",
        "description": "SystemGroupPagingResource",
        "properties": {
          "data": {
            "title": "Data",
            "description": "Data wrapper",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemGroup"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "type": "object",
        "xml": {
          "name": "SystemGroupPagingResource"
        }
      },
      "TenantResource": {
        "title": "TenantResource",
        "description": "TenantResource",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Tenant"
          }
        },
        "type": "object",
        "xml": {
          "name": "TenantResource"
        }
      },
      "TenantPagingResource": {
        "title": "TenantPagingResource",
        "description": "TenantPagingResource",
        "properties": {
          "data": {
            "title": "Data",
            "description": "Data wrapper",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tenant"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "type": "object",
        "xml": {
          "name": "TenantPagingResource"
        }
      },
      "UserResource": {
        "title": "UserResource",
        "description": "UserResource",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/User"
          }
        },
        "type": "object",
        "xml": {
          "name": "UserResource"
        }
      },
      "VulnerabilityResource": {
        "title": "VulnerabilityResource",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Vulnerability"
          }
        },
        "type": "object"
      },
      "VulnerabilityPagingResource": {
        "title": "VulnerabilityPagingResource",
        "properties": {
          "data": {
            "title": "Data",
            "description": "Data wrapper",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Vulnerability"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "type": "object"
      },
      "BaseSeverityCountResponse": {
        "title": "BaseSeverityCountResponse",
        "description": "BaseSeverityCountResponse",
        "properties": {
          "critical": {
            "title": "Crtitical",
            "description": "Crtitical severity count",
            "type": "integer",
            "default": 0
          },
          "high": {
            "title": "High",
            "description": "High severity count",
            "type": "integer",
            "default": 0
          },
          "medium": {
            "title": "Medium",
            "description": "Medium severity count",
            "type": "integer",
            "default": 0
          },
          "low": {
            "title": "Low",
            "description": "Low severity count",
            "type": "integer",
            "default": 0
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "sanctum": {
        "type": "apiKey",
        "description": "Enter token in format Bearer 4|HJEh2uoqdia9oAtKeHUIXcw08coNcxxqTFBvAmkBa304c6df",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}