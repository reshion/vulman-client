/**
 * API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { Type, Expose } from 'class-transformer';
// @dynamic

import { RiskResponseLifecycleStatus } from './riskResponseLifecycleStatus';

import { Observable }                                        from 'rxjs';
import { AbstractControl, FormControl, FormGroup, FormArray, Validators }                            from '@angular/forms';

export class RiskResponseStoreRequest { 


    /**
     * Name of the new Assessment
     */
    @Expose()
    name!: string;
    /**
     * The date the RiskResponse was created
     */
    @Expose()
    created!: string;
    @Expose()
    lifecycle_status!: RiskResponseLifecycleStatus;
    /**
     * The assessment id of the risk response
     */
    @Expose()
    assessment_id!: number;

    /**
     * Description: Name of the new Assessment
     * datatype: string
     * datatypeWithEnum: string
     * name: string   
     */
    /**
     * Description: The date the RiskResponse was created
     * datatype: string
     * datatypeWithEnum: string
     * created: string   
     */
    /**
     * datatype: RiskResponseLifecycleStatus
     * datatypeWithEnum: RiskResponseLifecycleStatus
     * lifecycle_status: RiskResponseLifecycleStatus   
     */
    /**
     * Description: The assessment id of the risk response
     * datatype: number
     * datatypeWithEnum: number
     * assessment_id: number   
     */

    // validations?: Map<string, Array<{[key: string]: string}>> = new Map<string, Array<{[key: string]: string}>>();

    constructor(init: Partial<RiskResponseStoreRequest> = {}) {
         
            
                    init.name ? this.name = init.name : null,
               
            
                    init.created ? this.created = init.created : null,
               
                        init.lifecycle_status ? this.lifecycle_status = init.lifecycle_status : null,
            
                    init.assessment_id ? this.assessment_id = init.assessment_id : null
               
    }

    static   getForm(data?: RiskResponseStoreRequest | RiskResponseStoreRequest[] | null): FormGroup {


        if(!data) {
            return RiskResponseStoreRequest.getFormGroup(new RiskResponseStoreRequest());
        }

         if(Array.isArray(data)) {
            let arrayForm = new FormArray<any>([]);
            
            if(data.length > 0) {
                arrayForm =  new FormArray<any>(data.map(item => RiskResponseStoreRequest.getFormGroup(item)));                
            }
            return new FormGroup({
                arrayForm
            });        
        } else {
             return  RiskResponseStoreRequest.getFormGroup(data);
        }       
     
    }

     /**
   * Get FormGroup
   *
   * @param {object} data
   * @returns {FormGroup}
   */
  static   getFormGroup(data?: RiskResponseStoreRequest): FormGroup {
       
        return new FormGroup({           
                        name: new FormControl(data?.name, []),
                        created: new FormControl(data?.created, []),
                        lifecycle_status: new FormControl(data?.lifecycle_status, []),
                        assessment_id: new FormControl(data?.assessment_id, [Validators.pattern('^[0-9]*$')])
        });
    }
  

}